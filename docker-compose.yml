version: "3.8"
services:
    db:
      build:
        context: .
        dockerfile: Database/Dockerfile
      ports:
        - "1433:1433"
      environment:
        ACCEPT_EULA: "Y"
        SA_PASSWORD: "Your_password123"
        DATABASE: "Test"
      command:
        - /bin/bash
        - -c
        - |
          # Launch MSSQL and send to background
          /opt/mssql/bin/sqlservr &
          pid=$$!
          # Wait for it to be available
          echo "Waiting for MS SQL to be available ‚è≥"
          /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
          is_up=$$?
          while [ $$is_up -ne 0 ] ; do
            echo -e $$(date)
            /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
            is_up=$$?
            sleep 5
          done
          # Run every script in /scripts
          # TODO set a flag so that this is only done once on creation,
          #      and not every time the container runs
          for foo in /*.sql
            do /opt/mssql-tools/bin/sqlcmd -U sa -P $$SA_PASSWORD -l 30 -e -i $$foo
          done
          echo "All scripts have been executed. Waiting for MS SQL(pid $$pid) to terminate."
          # Wait on the sqlserver process
          wait $$pid
  
    integration-tests:
      build:
        context: .
        dockerfile: Dockerfile
      depends_on:
        - db
      env_file:
        - .env
      command: ["./wait-for-it.sh",
                "db:1433",
                "-t",
                "120",
                "--",
                "dotnet", "test"]
